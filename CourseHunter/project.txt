без базы данных 
приложение которое сжимает изображение
Фронт написаный на react 
на локальном домене convert.local вход через браузер через https 
поднят класстер из 5 серверов содержит кластер swarm состоит из:
                        - nginx     - Reverse proxy 
                            завсит щт url   - приложение на React
                             - api upload (NestJS)
                             - app (react)
                        - RMQ       - шина сообщения 
                        - Converter x10 
                        
первый этап в рукопашную устанавливаю ubuntu на virtualBox без автоматизации скачав обрас с сайта...
                     
 ssh alari@127.0.0.1 -p 2222 -пробросить порты
                    
cat ~/.ssh/id_ed25519.pub -получить публичный ключ  своей машины 

на сервере убунты 
создаем папку .ssh в ней с помощью nano создаем authorized_keys и вставляю туда свой публичный ключ   

Установка Docker: 
https://docs.docker.com/engine/install/ubuntu/

$ sudo apt-get update

$ sudo apt-get install \
    apt-transport-https \
    ca-certificates \
    curl \
    gnupg \
    lsb-release

$ curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

$ echo \
  "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu \
  $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

$ sudo apt-get install docker-ce docker-ce-cli containerd.io

$ sudo groupadd docker

$ sudo usermod -aG docker $USER добавляем пользвателя 

https://github.com/AlariCode?tab=repositories&q=docker_demo&type=&language=&sort= 

из чего состоит проэкт
https://github.com/AlariCode/docker-demo

собираю image 

docker build -f ./apps/api/Dockerfile -t test:latest .
сборка image -f путь к докерфайлу -t teg файла .          все что есть в контексте 

19 lesson
анализируем image

  https://github.com/wagoodman/dive устанавливаем утилиту для анализа 
  запуск dive test:latest

docker run --name api2 -d test:latest

21 lesson сборка go проекта 
    # демо курса по Docker 2
    - сборка на golang:alpine
    - запуск на sceratch из собранного bin

    Сборка следующей командой:
    '''bash
    CGO_ENABLE=0 GOOS=linux GOARCH=amd64 go build
    '''
        


